// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sita.proto

#ifndef PROTOBUF_sita_2eproto__INCLUDED
#define PROTOBUF_sita_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sita_2eproto();
void protobuf_AssignDesc_sita_2eproto();
void protobuf_ShutdownFile_sita_2eproto();

class GraphParameter;
class OperatorParameter;
class AddOpParameter11;

// ===================================================================

class GraphParameter : public ::google::protobuf::Message {
 public:
  GraphParameter();
  virtual ~GraphParameter();

  GraphParameter(const GraphParameter& from);

  inline GraphParameter& operator=(const GraphParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphParameter& default_instance();

  void Swap(GraphParameter* other);

  // implements Message ----------------------------------------------

  GraphParameter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GraphParameter& from);
  void MergeFrom(const GraphParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .OperatorParameter operatordef = 2;
  inline int operatordef_size() const;
  inline void clear_operatordef();
  static const int kOperatordefFieldNumber = 2;
  inline const ::OperatorParameter& operatordef(int index) const;
  inline ::OperatorParameter* mutable_operatordef(int index);
  inline ::OperatorParameter* add_operatordef();
  inline const ::google::protobuf::RepeatedPtrField< ::OperatorParameter >&
      operatordef() const;
  inline ::google::protobuf::RepeatedPtrField< ::OperatorParameter >*
      mutable_operatordef();

  // @@protoc_insertion_point(class_scope:GraphParameter)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::OperatorParameter > operatordef_;
  friend void  protobuf_AddDesc_sita_2eproto();
  friend void protobuf_AssignDesc_sita_2eproto();
  friend void protobuf_ShutdownFile_sita_2eproto();

  void InitAsDefaultInstance();
  static GraphParameter* default_instance_;
};
// -------------------------------------------------------------------

class OperatorParameter : public ::google::protobuf::Message {
 public:
  OperatorParameter();
  virtual ~OperatorParameter();

  OperatorParameter(const OperatorParameter& from);

  inline OperatorParameter& operator=(const OperatorParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorParameter& default_instance();

  void Swap(OperatorParameter* other);

  // implements Message ----------------------------------------------

  OperatorParameter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperatorParameter& from);
  void MergeFrom(const OperatorParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // repeated string input = 3;
  inline int input_size() const;
  inline void clear_input();
  static const int kInputFieldNumber = 3;
  inline const ::std::string& input(int index) const;
  inline ::std::string* mutable_input(int index);
  inline void set_input(int index, const ::std::string& value);
  inline void set_input(int index, const char* value);
  inline void set_input(int index, const char* value, size_t size);
  inline ::std::string* add_input();
  inline void add_input(const ::std::string& value);
  inline void add_input(const char* value);
  inline void add_input(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& input() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input();

  // repeated string output = 4;
  inline int output_size() const;
  inline void clear_output();
  static const int kOutputFieldNumber = 4;
  inline const ::std::string& output(int index) const;
  inline ::std::string* mutable_output(int index);
  inline void set_output(int index, const ::std::string& value);
  inline void set_output(int index, const char* value);
  inline void set_output(int index, const char* value, size_t size);
  inline ::std::string* add_output();
  inline void add_output(const ::std::string& value);
  inline void add_output(const char* value);
  inline void add_output(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& output() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_output();

  // repeated float loss_weight = 5;
  inline int loss_weight_size() const;
  inline void clear_loss_weight();
  static const int kLossWeightFieldNumber = 5;
  inline float loss_weight(int index) const;
  inline void set_loss_weight(int index, float value);
  inline void add_loss_weight(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      loss_weight() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_loss_weight();

  // optional .AddOpParameter11 add_op_param = 100;
  inline bool has_add_op_param() const;
  inline void clear_add_op_param();
  static const int kAddOpParamFieldNumber = 100;
  inline const ::AddOpParameter11& add_op_param() const;
  inline ::AddOpParameter11* mutable_add_op_param();
  inline ::AddOpParameter11* release_add_op_param();
  inline void set_allocated_add_op_param(::AddOpParameter11* add_op_param);

  // @@protoc_insertion_point(class_scope:OperatorParameter)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_add_op_param();
  inline void clear_has_add_op_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;
  ::google::protobuf::RepeatedPtrField< ::std::string> output_;
  ::google::protobuf::RepeatedField< float > loss_weight_;
  ::AddOpParameter11* add_op_param_;
  friend void  protobuf_AddDesc_sita_2eproto();
  friend void protobuf_AssignDesc_sita_2eproto();
  friend void protobuf_ShutdownFile_sita_2eproto();

  void InitAsDefaultInstance();
  static OperatorParameter* default_instance_;
};
// -------------------------------------------------------------------

class AddOpParameter11 : public ::google::protobuf::Message {
 public:
  AddOpParameter11();
  virtual ~AddOpParameter11();

  AddOpParameter11(const AddOpParameter11& from);

  inline AddOpParameter11& operator=(const AddOpParameter11& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOpParameter11& default_instance();

  void Swap(AddOpParameter11* other);

  // implements Message ----------------------------------------------

  AddOpParameter11* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddOpParameter11& from);
  void MergeFrom(const AddOpParameter11& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bias_term = 1 [default = true];
  inline bool has_bias_term() const;
  inline void clear_bias_term();
  static const int kBiasTermFieldNumber = 1;
  inline bool bias_term() const;
  inline void set_bias_term(bool value);

  // optional uint32 pad_h = 2 [default = 0];
  inline bool has_pad_h() const;
  inline void clear_pad_h();
  static const int kPadHFieldNumber = 2;
  inline ::google::protobuf::uint32 pad_h() const;
  inline void set_pad_h(::google::protobuf::uint32 value);

  // optional uint32 pad_w = 3 [default = 0];
  inline bool has_pad_w() const;
  inline void clear_pad_w();
  static const int kPadWFieldNumber = 3;
  inline ::google::protobuf::uint32 pad_w() const;
  inline void set_pad_w(::google::protobuf::uint32 value);

  // optional uint32 kernel_h = 4;
  inline bool has_kernel_h() const;
  inline void clear_kernel_h();
  static const int kKernelHFieldNumber = 4;
  inline ::google::protobuf::uint32 kernel_h() const;
  inline void set_kernel_h(::google::protobuf::uint32 value);

  // optional uint32 kernel_w = 5;
  inline bool has_kernel_w() const;
  inline void clear_kernel_w();
  static const int kKernelWFieldNumber = 5;
  inline ::google::protobuf::uint32 kernel_w() const;
  inline void set_kernel_w(::google::protobuf::uint32 value);

  // optional uint32 stride_h = 6;
  inline bool has_stride_h() const;
  inline void clear_stride_h();
  static const int kStrideHFieldNumber = 6;
  inline ::google::protobuf::uint32 stride_h() const;
  inline void set_stride_h(::google::protobuf::uint32 value);

  // optional uint32 stride_w = 7;
  inline bool has_stride_w() const;
  inline void clear_stride_w();
  static const int kStrideWFieldNumber = 7;
  inline ::google::protobuf::uint32 stride_w() const;
  inline void set_stride_w(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AddOpParameter11)
 private:
  inline void set_has_bias_term();
  inline void clear_has_bias_term();
  inline void set_has_pad_h();
  inline void clear_has_pad_h();
  inline void set_has_pad_w();
  inline void clear_has_pad_w();
  inline void set_has_kernel_h();
  inline void clear_has_kernel_h();
  inline void set_has_kernel_w();
  inline void clear_has_kernel_w();
  inline void set_has_stride_h();
  inline void clear_has_stride_h();
  inline void set_has_stride_w();
  inline void clear_has_stride_w();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool bias_term_;
  ::google::protobuf::uint32 pad_h_;
  ::google::protobuf::uint32 pad_w_;
  ::google::protobuf::uint32 kernel_h_;
  ::google::protobuf::uint32 kernel_w_;
  ::google::protobuf::uint32 stride_h_;
  ::google::protobuf::uint32 stride_w_;
  friend void  protobuf_AddDesc_sita_2eproto();
  friend void protobuf_AssignDesc_sita_2eproto();
  friend void protobuf_ShutdownFile_sita_2eproto();

  void InitAsDefaultInstance();
  static AddOpParameter11* default_instance_;
};
// ===================================================================


// ===================================================================

// GraphParameter

// optional string name = 1;
inline bool GraphParameter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GraphParameter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GraphParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GraphParameter::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GraphParameter::name() const {
  // @@protoc_insertion_point(field_get:GraphParameter.name)
  return *name_;
}
inline void GraphParameter::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:GraphParameter.name)
}
inline void GraphParameter::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:GraphParameter.name)
}
inline void GraphParameter::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GraphParameter.name)
}
inline ::std::string* GraphParameter::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:GraphParameter.name)
  return name_;
}
inline ::std::string* GraphParameter::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GraphParameter::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:GraphParameter.name)
}

// repeated .OperatorParameter operatordef = 2;
inline int GraphParameter::operatordef_size() const {
  return operatordef_.size();
}
inline void GraphParameter::clear_operatordef() {
  operatordef_.Clear();
}
inline const ::OperatorParameter& GraphParameter::operatordef(int index) const {
  // @@protoc_insertion_point(field_get:GraphParameter.operatordef)
  return operatordef_.Get(index);
}
inline ::OperatorParameter* GraphParameter::mutable_operatordef(int index) {
  // @@protoc_insertion_point(field_mutable:GraphParameter.operatordef)
  return operatordef_.Mutable(index);
}
inline ::OperatorParameter* GraphParameter::add_operatordef() {
  // @@protoc_insertion_point(field_add:GraphParameter.operatordef)
  return operatordef_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OperatorParameter >&
GraphParameter::operatordef() const {
  // @@protoc_insertion_point(field_list:GraphParameter.operatordef)
  return operatordef_;
}
inline ::google::protobuf::RepeatedPtrField< ::OperatorParameter >*
GraphParameter::mutable_operatordef() {
  // @@protoc_insertion_point(field_mutable_list:GraphParameter.operatordef)
  return &operatordef_;
}

// -------------------------------------------------------------------

// OperatorParameter

// optional string name = 1;
inline bool OperatorParameter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperatorParameter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperatorParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperatorParameter::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OperatorParameter::name() const {
  // @@protoc_insertion_point(field_get:OperatorParameter.name)
  return *name_;
}
inline void OperatorParameter::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:OperatorParameter.name)
}
inline void OperatorParameter::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:OperatorParameter.name)
}
inline void OperatorParameter::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OperatorParameter.name)
}
inline ::std::string* OperatorParameter::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OperatorParameter.name)
  return name_;
}
inline ::std::string* OperatorParameter::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperatorParameter::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OperatorParameter.name)
}

// optional string type = 2;
inline bool OperatorParameter::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperatorParameter::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperatorParameter::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperatorParameter::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& OperatorParameter::type() const {
  // @@protoc_insertion_point(field_get:OperatorParameter.type)
  return *type_;
}
inline void OperatorParameter::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:OperatorParameter.type)
}
inline void OperatorParameter::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:OperatorParameter.type)
}
inline void OperatorParameter::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OperatorParameter.type)
}
inline ::std::string* OperatorParameter::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:OperatorParameter.type)
  return type_;
}
inline ::std::string* OperatorParameter::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperatorParameter::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:OperatorParameter.type)
}

// repeated string input = 3;
inline int OperatorParameter::input_size() const {
  return input_.size();
}
inline void OperatorParameter::clear_input() {
  input_.Clear();
}
inline const ::std::string& OperatorParameter::input(int index) const {
  // @@protoc_insertion_point(field_get:OperatorParameter.input)
  return input_.Get(index);
}
inline ::std::string* OperatorParameter::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:OperatorParameter.input)
  return input_.Mutable(index);
}
inline void OperatorParameter::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OperatorParameter.input)
  input_.Mutable(index)->assign(value);
}
inline void OperatorParameter::set_input(int index, const char* value) {
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OperatorParameter.input)
}
inline void OperatorParameter::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OperatorParameter.input)
}
inline ::std::string* OperatorParameter::add_input() {
  return input_.Add();
}
inline void OperatorParameter::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OperatorParameter.input)
}
inline void OperatorParameter::add_input(const char* value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OperatorParameter.input)
}
inline void OperatorParameter::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OperatorParameter.input)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OperatorParameter::input() const {
  // @@protoc_insertion_point(field_list:OperatorParameter.input)
  return input_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OperatorParameter::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:OperatorParameter.input)
  return &input_;
}

// repeated string output = 4;
inline int OperatorParameter::output_size() const {
  return output_.size();
}
inline void OperatorParameter::clear_output() {
  output_.Clear();
}
inline const ::std::string& OperatorParameter::output(int index) const {
  // @@protoc_insertion_point(field_get:OperatorParameter.output)
  return output_.Get(index);
}
inline ::std::string* OperatorParameter::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:OperatorParameter.output)
  return output_.Mutable(index);
}
inline void OperatorParameter::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OperatorParameter.output)
  output_.Mutable(index)->assign(value);
}
inline void OperatorParameter::set_output(int index, const char* value) {
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OperatorParameter.output)
}
inline void OperatorParameter::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OperatorParameter.output)
}
inline ::std::string* OperatorParameter::add_output() {
  return output_.Add();
}
inline void OperatorParameter::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OperatorParameter.output)
}
inline void OperatorParameter::add_output(const char* value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OperatorParameter.output)
}
inline void OperatorParameter::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OperatorParameter.output)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OperatorParameter::output() const {
  // @@protoc_insertion_point(field_list:OperatorParameter.output)
  return output_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OperatorParameter::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:OperatorParameter.output)
  return &output_;
}

// repeated float loss_weight = 5;
inline int OperatorParameter::loss_weight_size() const {
  return loss_weight_.size();
}
inline void OperatorParameter::clear_loss_weight() {
  loss_weight_.Clear();
}
inline float OperatorParameter::loss_weight(int index) const {
  // @@protoc_insertion_point(field_get:OperatorParameter.loss_weight)
  return loss_weight_.Get(index);
}
inline void OperatorParameter::set_loss_weight(int index, float value) {
  loss_weight_.Set(index, value);
  // @@protoc_insertion_point(field_set:OperatorParameter.loss_weight)
}
inline void OperatorParameter::add_loss_weight(float value) {
  loss_weight_.Add(value);
  // @@protoc_insertion_point(field_add:OperatorParameter.loss_weight)
}
inline const ::google::protobuf::RepeatedField< float >&
OperatorParameter::loss_weight() const {
  // @@protoc_insertion_point(field_list:OperatorParameter.loss_weight)
  return loss_weight_;
}
inline ::google::protobuf::RepeatedField< float >*
OperatorParameter::mutable_loss_weight() {
  // @@protoc_insertion_point(field_mutable_list:OperatorParameter.loss_weight)
  return &loss_weight_;
}

// optional .AddOpParameter11 add_op_param = 100;
inline bool OperatorParameter::has_add_op_param() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperatorParameter::set_has_add_op_param() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperatorParameter::clear_has_add_op_param() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperatorParameter::clear_add_op_param() {
  if (add_op_param_ != NULL) add_op_param_->::AddOpParameter11::Clear();
  clear_has_add_op_param();
}
inline const ::AddOpParameter11& OperatorParameter::add_op_param() const {
  // @@protoc_insertion_point(field_get:OperatorParameter.add_op_param)
  return add_op_param_ != NULL ? *add_op_param_ : *default_instance_->add_op_param_;
}
inline ::AddOpParameter11* OperatorParameter::mutable_add_op_param() {
  set_has_add_op_param();
  if (add_op_param_ == NULL) add_op_param_ = new ::AddOpParameter11;
  // @@protoc_insertion_point(field_mutable:OperatorParameter.add_op_param)
  return add_op_param_;
}
inline ::AddOpParameter11* OperatorParameter::release_add_op_param() {
  clear_has_add_op_param();
  ::AddOpParameter11* temp = add_op_param_;
  add_op_param_ = NULL;
  return temp;
}
inline void OperatorParameter::set_allocated_add_op_param(::AddOpParameter11* add_op_param) {
  delete add_op_param_;
  add_op_param_ = add_op_param;
  if (add_op_param) {
    set_has_add_op_param();
  } else {
    clear_has_add_op_param();
  }
  // @@protoc_insertion_point(field_set_allocated:OperatorParameter.add_op_param)
}

// -------------------------------------------------------------------

// AddOpParameter11

// optional bool bias_term = 1 [default = true];
inline bool AddOpParameter11::has_bias_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddOpParameter11::set_has_bias_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddOpParameter11::clear_has_bias_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddOpParameter11::clear_bias_term() {
  bias_term_ = true;
  clear_has_bias_term();
}
inline bool AddOpParameter11::bias_term() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.bias_term)
  return bias_term_;
}
inline void AddOpParameter11::set_bias_term(bool value) {
  set_has_bias_term();
  bias_term_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.bias_term)
}

// optional uint32 pad_h = 2 [default = 0];
inline bool AddOpParameter11::has_pad_h() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddOpParameter11::set_has_pad_h() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddOpParameter11::clear_has_pad_h() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddOpParameter11::clear_pad_h() {
  pad_h_ = 0u;
  clear_has_pad_h();
}
inline ::google::protobuf::uint32 AddOpParameter11::pad_h() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.pad_h)
  return pad_h_;
}
inline void AddOpParameter11::set_pad_h(::google::protobuf::uint32 value) {
  set_has_pad_h();
  pad_h_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.pad_h)
}

// optional uint32 pad_w = 3 [default = 0];
inline bool AddOpParameter11::has_pad_w() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddOpParameter11::set_has_pad_w() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddOpParameter11::clear_has_pad_w() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddOpParameter11::clear_pad_w() {
  pad_w_ = 0u;
  clear_has_pad_w();
}
inline ::google::protobuf::uint32 AddOpParameter11::pad_w() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.pad_w)
  return pad_w_;
}
inline void AddOpParameter11::set_pad_w(::google::protobuf::uint32 value) {
  set_has_pad_w();
  pad_w_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.pad_w)
}

// optional uint32 kernel_h = 4;
inline bool AddOpParameter11::has_kernel_h() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddOpParameter11::set_has_kernel_h() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddOpParameter11::clear_has_kernel_h() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddOpParameter11::clear_kernel_h() {
  kernel_h_ = 0u;
  clear_has_kernel_h();
}
inline ::google::protobuf::uint32 AddOpParameter11::kernel_h() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.kernel_h)
  return kernel_h_;
}
inline void AddOpParameter11::set_kernel_h(::google::protobuf::uint32 value) {
  set_has_kernel_h();
  kernel_h_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.kernel_h)
}

// optional uint32 kernel_w = 5;
inline bool AddOpParameter11::has_kernel_w() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddOpParameter11::set_has_kernel_w() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddOpParameter11::clear_has_kernel_w() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddOpParameter11::clear_kernel_w() {
  kernel_w_ = 0u;
  clear_has_kernel_w();
}
inline ::google::protobuf::uint32 AddOpParameter11::kernel_w() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.kernel_w)
  return kernel_w_;
}
inline void AddOpParameter11::set_kernel_w(::google::protobuf::uint32 value) {
  set_has_kernel_w();
  kernel_w_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.kernel_w)
}

// optional uint32 stride_h = 6;
inline bool AddOpParameter11::has_stride_h() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddOpParameter11::set_has_stride_h() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddOpParameter11::clear_has_stride_h() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddOpParameter11::clear_stride_h() {
  stride_h_ = 0u;
  clear_has_stride_h();
}
inline ::google::protobuf::uint32 AddOpParameter11::stride_h() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.stride_h)
  return stride_h_;
}
inline void AddOpParameter11::set_stride_h(::google::protobuf::uint32 value) {
  set_has_stride_h();
  stride_h_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.stride_h)
}

// optional uint32 stride_w = 7;
inline bool AddOpParameter11::has_stride_w() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddOpParameter11::set_has_stride_w() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddOpParameter11::clear_has_stride_w() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddOpParameter11::clear_stride_w() {
  stride_w_ = 0u;
  clear_has_stride_w();
}
inline ::google::protobuf::uint32 AddOpParameter11::stride_w() const {
  // @@protoc_insertion_point(field_get:AddOpParameter11.stride_w)
  return stride_w_;
}
inline void AddOpParameter11::set_stride_w(::google::protobuf::uint32 value) {
  set_has_stride_w();
  stride_w_ = value;
  // @@protoc_insertion_point(field_set:AddOpParameter11.stride_w)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sita_2eproto__INCLUDED
