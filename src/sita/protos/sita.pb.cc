// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sita.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sita.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* OperatorSym_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorSym_reflection_ = NULL;
const ::google::protobuf::Descriptor* GraphSym_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GraphSym_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sita_2eproto() {
  protobuf_AddDesc_sita_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sita.proto");
  GOOGLE_CHECK(file != NULL);
  OperatorSym_descriptor_ = file->message_type(0);
  static const int OperatorSym_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSym, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSym, outputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSym, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSym, type_),
  };
  OperatorSym_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OperatorSym_descriptor_,
      OperatorSym::default_instance_,
      OperatorSym_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSym, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSym, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OperatorSym));
  GraphSym_descriptor_ = file->message_type(1);
  static const int GraphSym_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphSym, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphSym, op_),
  };
  GraphSym_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GraphSym_descriptor_,
      GraphSym::default_instance_,
      GraphSym_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphSym, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphSym, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GraphSym));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sita_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OperatorSym_descriptor_, &OperatorSym::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GraphSym_descriptor_, &GraphSym::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sita_2eproto() {
  delete OperatorSym::default_instance_;
  delete OperatorSym_reflection_;
  delete GraphSym::default_instance_;
  delete GraphSym_reflection_;
}

void protobuf_AddDesc_sita_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nsita.proto\"J\n\013OperatorSym\022\016\n\006inputs\030\001 "
    "\003(\t\022\017\n\007outputs\030\002 \003(\t\022\014\n\004name\030\003 \001(\t\022\014\n\004ty"
    "pe\030\004 \001(\t\"2\n\010GraphSym\022\014\n\004name\030\001 \001(\t\022\030\n\002op"
    "\030\002 \003(\0132\014.OperatorSym", 140);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sita.proto", &protobuf_RegisterTypes);
  OperatorSym::default_instance_ = new OperatorSym();
  GraphSym::default_instance_ = new GraphSym();
  OperatorSym::default_instance_->InitAsDefaultInstance();
  GraphSym::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sita_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sita_2eproto {
  StaticDescriptorInitializer_sita_2eproto() {
    protobuf_AddDesc_sita_2eproto();
  }
} static_descriptor_initializer_sita_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int OperatorSym::kInputsFieldNumber;
const int OperatorSym::kOutputsFieldNumber;
const int OperatorSym::kNameFieldNumber;
const int OperatorSym::kTypeFieldNumber;
#endif  // !_MSC_VER

OperatorSym::OperatorSym()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OperatorSym)
}

void OperatorSym::InitAsDefaultInstance() {
}

OperatorSym::OperatorSym(const OperatorSym& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OperatorSym)
}

void OperatorSym::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OperatorSym::~OperatorSym() {
  // @@protoc_insertion_point(destructor:OperatorSym)
  SharedDtor();
}

void OperatorSym::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

void OperatorSym::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorSym::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorSym_descriptor_;
}

const OperatorSym& OperatorSym::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sita_2eproto();
  return *default_instance_;
}

OperatorSym* OperatorSym::default_instance_ = NULL;

OperatorSym* OperatorSym::New() const {
  return new OperatorSym;
}

void OperatorSym::Clear() {
  if (_has_bits_[0 / 32] & 12) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
  }
  inputs_.Clear();
  outputs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OperatorSym::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OperatorSym)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string inputs = 1;
      case 1: {
        if (tag == 10) {
         parse_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_inputs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inputs(this->inputs_size() - 1).data(),
            this->inputs(this->inputs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inputs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_inputs;
        if (input->ExpectTag(18)) goto parse_outputs;
        break;
      }

      // repeated string outputs = 2;
      case 2: {
        if (tag == 18) {
         parse_outputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_outputs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->outputs(this->outputs_size() - 1).data(),
            this->outputs(this->outputs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "outputs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_outputs;
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // optional string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OperatorSym)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OperatorSym)
  return false;
#undef DO_
}

void OperatorSym::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OperatorSym)
  // repeated string inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->inputs(i).data(), this->inputs(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "inputs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->inputs(i), output);
  }

  // repeated string outputs = 2;
  for (int i = 0; i < this->outputs_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->outputs(i).data(), this->outputs(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "outputs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->outputs(i), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OperatorSym)
}

::google::protobuf::uint8* OperatorSym::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OperatorSym)
  // repeated string inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inputs(i).data(), this->inputs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inputs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->inputs(i), target);
  }

  // repeated string outputs = 2;
  for (int i = 0; i < this->outputs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outputs(i).data(), this->outputs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "outputs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->outputs(i), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperatorSym)
  return target;
}

int OperatorSym::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

  }
  // repeated string inputs = 1;
  total_size += 1 * this->inputs_size();
  for (int i = 0; i < this->inputs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->inputs(i));
  }

  // repeated string outputs = 2;
  total_size += 1 * this->outputs_size();
  for (int i = 0; i < this->outputs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->outputs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorSym::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OperatorSym* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OperatorSym*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OperatorSym::MergeFrom(const OperatorSym& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OperatorSym::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorSym::CopyFrom(const OperatorSym& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatorSym::IsInitialized() const {

  return true;
}

void OperatorSym::Swap(OperatorSym* other) {
  if (other != this) {
    inputs_.Swap(&other->inputs_);
    outputs_.Swap(&other->outputs_);
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OperatorSym::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorSym_descriptor_;
  metadata.reflection = OperatorSym_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GraphSym::kNameFieldNumber;
const int GraphSym::kOpFieldNumber;
#endif  // !_MSC_VER

GraphSym::GraphSym()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GraphSym)
}

void GraphSym::InitAsDefaultInstance() {
}

GraphSym::GraphSym(const GraphSym& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GraphSym)
}

void GraphSym::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GraphSym::~GraphSym() {
  // @@protoc_insertion_point(destructor:GraphSym)
  SharedDtor();
}

void GraphSym::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void GraphSym::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphSym::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GraphSym_descriptor_;
}

const GraphSym& GraphSym::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sita_2eproto();
  return *default_instance_;
}

GraphSym* GraphSym::default_instance_ = NULL;

GraphSym* GraphSym::New() const {
  return new GraphSym;
}

void GraphSym::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  op_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GraphSym::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GraphSym)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_op;
        break;
      }

      // repeated .OperatorSym op = 2;
      case 2: {
        if (tag == 18) {
         parse_op:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_op()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_op;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GraphSym)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GraphSym)
  return false;
#undef DO_
}

void GraphSym::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GraphSym)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .OperatorSym op = 2;
  for (int i = 0; i < this->op_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->op(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GraphSym)
}

::google::protobuf::uint8* GraphSym::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GraphSym)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .OperatorSym op = 2;
  for (int i = 0; i < this->op_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->op(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GraphSym)
  return target;
}

int GraphSym::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .OperatorSym op = 2;
  total_size += 1 * this->op_size();
  for (int i = 0; i < this->op_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->op(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphSym::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GraphSym* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GraphSym*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GraphSym::MergeFrom(const GraphSym& from) {
  GOOGLE_CHECK_NE(&from, this);
  op_.MergeFrom(from.op_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GraphSym::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphSym::CopyFrom(const GraphSym& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphSym::IsInitialized() const {

  return true;
}

void GraphSym::Swap(GraphSym* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    op_.Swap(&other->op_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GraphSym::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GraphSym_descriptor_;
  metadata.reflection = GraphSym_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
