// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sita.proto

#ifndef PROTOBUF_sita_2eproto__INCLUDED
#define PROTOBUF_sita_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sita_2eproto();
void protobuf_InitDefaults_sita_2eproto();
void protobuf_AssignDesc_sita_2eproto();
void protobuf_ShutdownFile_sita_2eproto();

class GraphSym;
class OperatorDef;

// ===================================================================

class OperatorDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OperatorDef) */ {
 public:
  OperatorDef();
  virtual ~OperatorDef();

  OperatorDef(const OperatorDef& from);

  inline OperatorDef& operator=(const OperatorDef& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorDef& default_instance();

  static const OperatorDef* internal_default_instance();

  void Swap(OperatorDef* other);

  // implements Message ----------------------------------------------

  inline OperatorDef* New() const { return New(NULL); }

  OperatorDef* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperatorDef& from);
  void MergeFrom(const OperatorDef& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperatorDef* other);
  void UnsafeMergeFrom(const OperatorDef& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string inputs = 1;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 1;
  const ::std::string& inputs(int index) const;
  ::std::string* mutable_inputs(int index);
  void set_inputs(int index, const ::std::string& value);
  void set_inputs(int index, const char* value);
  void set_inputs(int index, const char* value, size_t size);
  ::std::string* add_inputs();
  void add_inputs(const ::std::string& value);
  void add_inputs(const char* value);
  void add_inputs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& inputs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_inputs();

  // repeated string outputs = 2;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 2;
  const ::std::string& outputs(int index) const;
  ::std::string* mutable_outputs(int index);
  void set_outputs(int index, const ::std::string& value);
  void set_outputs(int index, const char* value);
  void set_outputs(int index, const char* value, size_t size);
  ::std::string* add_outputs();
  void add_outputs(const ::std::string& value);
  void add_outputs(const char* value);
  void add_outputs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& outputs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_outputs();

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:OperatorDef)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> inputs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> outputs_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  friend void  protobuf_InitDefaults_sita_2eproto_impl();
  friend void  protobuf_AddDesc_sita_2eproto_impl();
  friend void protobuf_AssignDesc_sita_2eproto();
  friend void protobuf_ShutdownFile_sita_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperatorDef> OperatorDef_default_instance_;

// -------------------------------------------------------------------

class GraphSym : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GraphSym) */ {
 public:
  GraphSym();
  virtual ~GraphSym();

  GraphSym(const GraphSym& from);

  inline GraphSym& operator=(const GraphSym& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphSym& default_instance();

  static const GraphSym* internal_default_instance();

  void Swap(GraphSym* other);

  // implements Message ----------------------------------------------

  inline GraphSym* New() const { return New(NULL); }

  GraphSym* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GraphSym& from);
  void MergeFrom(const GraphSym& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphSym* other);
  void UnsafeMergeFrom(const GraphSym& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .OperatorDef op = 2;
  int op_size() const;
  void clear_op();
  static const int kOpFieldNumber = 2;
  const ::OperatorDef& op(int index) const;
  ::OperatorDef* mutable_op(int index);
  ::OperatorDef* add_op();
  ::google::protobuf::RepeatedPtrField< ::OperatorDef >*
      mutable_op();
  const ::google::protobuf::RepeatedPtrField< ::OperatorDef >&
      op() const;

  // @@protoc_insertion_point(class_scope:GraphSym)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::OperatorDef > op_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_InitDefaults_sita_2eproto_impl();
  friend void  protobuf_AddDesc_sita_2eproto_impl();
  friend void protobuf_AssignDesc_sita_2eproto();
  friend void protobuf_ShutdownFile_sita_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GraphSym> GraphSym_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OperatorDef

// repeated string inputs = 1;
inline int OperatorDef::inputs_size() const {
  return inputs_.size();
}
inline void OperatorDef::clear_inputs() {
  inputs_.Clear();
}
inline const ::std::string& OperatorDef::inputs(int index) const {
  // @@protoc_insertion_point(field_get:OperatorDef.inputs)
  return inputs_.Get(index);
}
inline ::std::string* OperatorDef::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:OperatorDef.inputs)
  return inputs_.Mutable(index);
}
inline void OperatorDef::set_inputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OperatorDef.inputs)
  inputs_.Mutable(index)->assign(value);
}
inline void OperatorDef::set_inputs(int index, const char* value) {
  inputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OperatorDef.inputs)
}
inline void OperatorDef::set_inputs(int index, const char* value, size_t size) {
  inputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OperatorDef.inputs)
}
inline ::std::string* OperatorDef::add_inputs() {
  // @@protoc_insertion_point(field_add_mutable:OperatorDef.inputs)
  return inputs_.Add();
}
inline void OperatorDef::add_inputs(const ::std::string& value) {
  inputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OperatorDef.inputs)
}
inline void OperatorDef::add_inputs(const char* value) {
  inputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OperatorDef.inputs)
}
inline void OperatorDef::add_inputs(const char* value, size_t size) {
  inputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OperatorDef.inputs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OperatorDef::inputs() const {
  // @@protoc_insertion_point(field_list:OperatorDef.inputs)
  return inputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OperatorDef::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:OperatorDef.inputs)
  return &inputs_;
}

// repeated string outputs = 2;
inline int OperatorDef::outputs_size() const {
  return outputs_.size();
}
inline void OperatorDef::clear_outputs() {
  outputs_.Clear();
}
inline const ::std::string& OperatorDef::outputs(int index) const {
  // @@protoc_insertion_point(field_get:OperatorDef.outputs)
  return outputs_.Get(index);
}
inline ::std::string* OperatorDef::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:OperatorDef.outputs)
  return outputs_.Mutable(index);
}
inline void OperatorDef::set_outputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OperatorDef.outputs)
  outputs_.Mutable(index)->assign(value);
}
inline void OperatorDef::set_outputs(int index, const char* value) {
  outputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OperatorDef.outputs)
}
inline void OperatorDef::set_outputs(int index, const char* value, size_t size) {
  outputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OperatorDef.outputs)
}
inline ::std::string* OperatorDef::add_outputs() {
  // @@protoc_insertion_point(field_add_mutable:OperatorDef.outputs)
  return outputs_.Add();
}
inline void OperatorDef::add_outputs(const ::std::string& value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OperatorDef.outputs)
}
inline void OperatorDef::add_outputs(const char* value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OperatorDef.outputs)
}
inline void OperatorDef::add_outputs(const char* value, size_t size) {
  outputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OperatorDef.outputs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OperatorDef::outputs() const {
  // @@protoc_insertion_point(field_list:OperatorDef.outputs)
  return outputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OperatorDef::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:OperatorDef.outputs)
  return &outputs_;
}

// optional string name = 3;
inline bool OperatorDef::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperatorDef::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperatorDef::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperatorDef::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& OperatorDef::name() const {
  // @@protoc_insertion_point(field_get:OperatorDef.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDef::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperatorDef.name)
}
inline void OperatorDef::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperatorDef.name)
}
inline void OperatorDef::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperatorDef.name)
}
inline ::std::string* OperatorDef::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:OperatorDef.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorDef::release_name() {
  // @@protoc_insertion_point(field_release:OperatorDef.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:OperatorDef.name)
}

// optional string type = 4;
inline bool OperatorDef::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperatorDef::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperatorDef::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperatorDef::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& OperatorDef::type() const {
  // @@protoc_insertion_point(field_get:OperatorDef.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDef::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperatorDef.type)
}
inline void OperatorDef::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperatorDef.type)
}
inline void OperatorDef::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperatorDef.type)
}
inline ::std::string* OperatorDef::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:OperatorDef.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorDef::release_type() {
  // @@protoc_insertion_point(field_release:OperatorDef.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDef::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:OperatorDef.type)
}

inline const OperatorDef* OperatorDef::internal_default_instance() {
  return &OperatorDef_default_instance_.get();
}
// -------------------------------------------------------------------

// GraphSym

// optional string name = 1;
inline bool GraphSym::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GraphSym::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GraphSym::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GraphSym::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GraphSym::name() const {
  // @@protoc_insertion_point(field_get:GraphSym.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphSym::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GraphSym.name)
}
inline void GraphSym::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GraphSym.name)
}
inline void GraphSym::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GraphSym.name)
}
inline ::std::string* GraphSym::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:GraphSym.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GraphSym::release_name() {
  // @@protoc_insertion_point(field_release:GraphSym.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphSym::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GraphSym.name)
}

// repeated .OperatorDef op = 2;
inline int GraphSym::op_size() const {
  return op_.size();
}
inline void GraphSym::clear_op() {
  op_.Clear();
}
inline const ::OperatorDef& GraphSym::op(int index) const {
  // @@protoc_insertion_point(field_get:GraphSym.op)
  return op_.Get(index);
}
inline ::OperatorDef* GraphSym::mutable_op(int index) {
  // @@protoc_insertion_point(field_mutable:GraphSym.op)
  return op_.Mutable(index);
}
inline ::OperatorDef* GraphSym::add_op() {
  // @@protoc_insertion_point(field_add:GraphSym.op)
  return op_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OperatorDef >*
GraphSym::mutable_op() {
  // @@protoc_insertion_point(field_mutable_list:GraphSym.op)
  return &op_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OperatorDef >&
GraphSym::op() const {
  // @@protoc_insertion_point(field_list:GraphSym.op)
  return op_;
}

inline const GraphSym* GraphSym::internal_default_instance() {
  return &GraphSym_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sita_2eproto__INCLUDED
